// <auto-generated />
using System;
using ApiHistorias;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiHistorias.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiHistorias.Entities.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfesionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfesionalId");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("ApiHistorias.Entities.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("OSocial")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ApiHistorias.Entities.Profesional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("Permisos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profesionales");
                });

            modelBuilder.Entity("ApiHistorias.Entities.ProfesionalPaciente", b =>
                {
                    b.Property<int>("ProfesionalId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("ProfesionalId", "PacienteId");

                    b.HasIndex("PacienteId");

                    b.ToTable("ProfesionalesPacientes");
                });

            modelBuilder.Entity("PacienteProfesional", b =>
                {
                    b.Property<int>("PacientesId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesionalesId")
                        .HasColumnType("int");

                    b.HasKey("PacientesId", "ProfesionalesId");

                    b.HasIndex("ProfesionalesId");

                    b.ToTable("PacienteProfesional");
                });

            modelBuilder.Entity("ApiHistorias.Entities.Historia", b =>
                {
                    b.HasOne("ApiHistorias.Entities.Paciente", "Paciente")
                        .WithMany("Historias")
                        .HasForeignKey("PacienteId");

                    b.HasOne("ApiHistorias.Entities.Profesional", "Profesional")
                        .WithMany("Historias")
                        .HasForeignKey("ProfesionalId");

                    b.Navigation("Paciente");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("ApiHistorias.Entities.ProfesionalPaciente", b =>
                {
                    b.HasOne("ApiHistorias.Entities.Paciente", "Paciente")
                        .WithMany("ProfesionalesPacientes")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiHistorias.Entities.Profesional", "Profesional")
                        .WithMany("ProfesionalesPacientes")
                        .HasForeignKey("ProfesionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("PacienteProfesional", b =>
                {
                    b.HasOne("ApiHistorias.Entities.Paciente", null)
                        .WithMany()
                        .HasForeignKey("PacientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiHistorias.Entities.Profesional", null)
                        .WithMany()
                        .HasForeignKey("ProfesionalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiHistorias.Entities.Paciente", b =>
                {
                    b.Navigation("Historias");

                    b.Navigation("ProfesionalesPacientes");
                });

            modelBuilder.Entity("ApiHistorias.Entities.Profesional", b =>
                {
                    b.Navigation("Historias");

                    b.Navigation("ProfesionalesPacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
